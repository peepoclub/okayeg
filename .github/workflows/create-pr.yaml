name: Create Pull Request for new emotes

on:
  issues:
    types: [opened]

  workflow_dispatch:
  
jobs:
  use:
    runs-on: ubuntu-latest
    steps:
      - name: 🎗️ Checkout
        uses: actions/checkout@v2
        # if: ${{ contains( env.TRUSTED_USERS, github.event.issue.user.login ) }}
        # env:
        #   TRUSTED_USERS: 'rilaveon'
          
      - name: ⬇️ Parse issue
        uses: stefanbuck/github-issue-parser@v2
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/emote.yaml
          
      - name: 📋 Provide variables
        uses: actions/github-script@v5
        env:
          ISSUE_MODEL: ${{ steps.issue-parser.outputs.jsonString }}
        with:
          script: |
            const issueForm = JSON.parse(process.env.ISSUE_MODEL);

            const emoteProvider = {
              "Twitch Animated Emote": {
                id: "twitch",
                preview: (id) =>
                  `https://static-cdn.jtvnw.net/emoticons/v2/emotesv2_${id}/default/dark/3.0`,
              },
              "BetterTTV Animated Emote": {
                id: "betterttv",
                preview: (id) => `https://cdn.betterttv.net/emote/${id}/3x`,
              },
              "7TV Animated Emote": {
                id: "seventv",
                preview: (id) => `https://cdn.7tv.app/emote/${id}/4x.gif`,
              },
              "Telegram Sticker": {
                id: "telegram",
              },
              "Imgur GIF": {
                id: "imgur",
                preview: (id) => `https://i.imgur.com/${id}.gif`,
              },
            };

            const triggers = issueForm.emotename.split(", ");
            const id = issueForm.emoteid;
            const provider = emoteProvider[issueForm.type];

            const item = [
              `- provider: ${provider.id}`,
              `  triggers:`,
              triggers.map((trigger) => `  - ${trigger}`).join("\n"),
              `  content: ${issueForm.emoteid}`,
            ].join("\n");

            const isPlural = triggers.length > 1;

            const bodySection = (...sectionItems) =>
              sectionItems.filter(Boolean).join("\n");

            const pr = {
              title: `add emote${isPlural ? "s" : ""}: ${triggers.join(", ")}`,

              body: [
                `This is automated PR based on #${context.issue.number} issue.`,
                bodySection(
                  `# New Emote`,
                  `- Provider: ${issueForm.type} (${provider.id})`,
                  `- Content ID: ${id}`
                ),
                provider.id !== "telegram" &&
                  bodySection(
                    `# Emote Preview`,
                    `![${issueForm.emotename}](${provider.preview(issueForm.emoteid)})`
                  ),
                bodySection(
                  `# Triggers`,
                  triggers.map((trigger) => `- \`${trigger}\``).join("\n")
                ),
                `Closes #${context.issue.number}`,
              ]
                .filter(Boolean)
                .join("\n\n"),
            };

            core.exportVariable("item", item);
            core.exportVariable("provider", provider.id);
            core.exportVariable("emote-name", triggers[0]);
            core.exportVariable("emote-id", id);

            core.exportVariable("pr-title", pr.title);
            core.exportVariable("pr-body", pr.body);

      - name: 📃 Add emote to list
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "$item" >> ./db/all.yaml
          echo "" >> ./db/all.yaml
          git commit -am "Add new emote"
          
      - name: ➕ Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          delete-branch: true
          title: ${{ env.pr-title }}
          body: ${{ env.pr-body }}
          labels: |
            automated pr
          branch: 'new-emote__${{ env.emote-id }}-${{ env.provider }}'
          assignees: rilaveon
          draft: false
